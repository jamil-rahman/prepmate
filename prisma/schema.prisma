generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id
  email     String        @unique
  name      String?
  createdAt DateTime      @default(now())
  attempts  QuizAttempt[]

  @@map("users")
}

model Question {
  id            Int          @id @default(autoincrement())
  domainType    String
  question      String
  optionA       String
  optionB       String
  optionC       String
  optionD       String
  correctAnswer String
  explanation   String
  userAnswers   UserAnswer[]

  @@map("questions")
}

model QuizAttempt {
  id             Int          @id @default(autoincrement())
  userId         String
  domainType     String
  score          Float
  totalQuestions Int
  correctAnswers Int
  completedAt    DateTime     @default(now())
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  answers        UserAnswer[]

  @@index([userId])
  @@index([completedAt])
  @@map("quiz_attempts")
}

model UserAnswer {
  id             Int         @id @default(autoincrement())
  attemptId      Int
  questionId     Int
  selectedAnswer String
  isCorrect      Boolean
  timeSpent      Int?
  attempt        QuizAttempt @relation(fields: [attemptId], references: [id], onDelete: Cascade)
  question       Question    @relation(fields: [questionId], references: [id])

  @@index([attemptId])
  @@index([questionId])
  @@map("user_answers")
}
